server {
    listen 80;
    server_name 89.104.71.159;  # Адрес вашего сервера (можно использовать IP или домен)

    # Корневой путь, который будет проксироваться на Next.js
    location / {
        proxy_pass http://next-app:3000;  # Прокси на контейнер Next.js (имя контейнера должно быть 'next-app' в Docker Compose)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Прокси для API запросов на Laravel (например, /api/)
    location /api/ {
        proxy_pass http://laravel-app:8000;  # Прокси на контейнер Laravel (имя контейнера 'laravel-app' или IP)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Статические файлы (если Laravel или Next.js генерируют статику)
    location /static/ {
        root /usr/share/nginx/html;  # Путь до статических файлов
    }

    # Обработка preflight запросов для CORS
    location /api/ {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Страница ошибки 500, 502, 503, 504
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
